<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-17T11:29:11 IST" name="Default suite" finished-at="2024-04-17T11:30:47 IST" duration-ms="96335">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-04-17T11:29:11 IST" name="Default test" finished-at="2024-04-17T11:30:47 IST" duration-ms="96335">
      <class name="runner.Testrunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:29:11 IST" name="setUpClass" finished-at="2024-04-17T11:29:11 IST" duration-ms="672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@14dbfdb1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:29:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-17T11:29:31 IST" duration-ms="19367" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["User wants to sign up with an account"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Signup and Login"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Sign up successful.] but found [This user already exist.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Sign up successful.] but found [This user already exist.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at stepdefinitions.DemoBlazeSignupandLoginstepDefinition.user_checks_message_is_displayed_as_alert(DemoBlazeSignupandLoginstepDefinition.java:53)
at âœ½.User checks is "Sign up successful." is displayed as alert(classpath:features//DemoBlazeSignupandLogin.feature:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:29:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-17T11:29:51 IST" duration-ms="20693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User wants to Login with valid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Signup and Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:29:51 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-17T11:30:08 IST" duration-ms="16745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User wants to Login with invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Signup and Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:30:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-17T11:30:26 IST" duration-ms="17620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User wants to Login with invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Signup and Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:30:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-17T11:30:44 IST" duration-ms="18196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["User wants to Login with invalid data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Signup and Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.Testrunner@2aceadd4]" started-at="2024-04-17T11:30:44 IST" name="tearDownClass" finished-at="2024-04-17T11:30:47 IST" duration-ms="2991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Testrunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
